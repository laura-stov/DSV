PASSOS PARA CRIAR UM PROJETO EM C#
1 - criar uma solução
dotnet new sln --output API
2 - criar um projeto web (entrar na solução para criar o projeto)
dotnet new web --name API
3 - adicionar o projeto na solução
dotnet sln add API
4 - dotnet run para pegar o local host
5 - criar um arquivo teste.http (custom file)
GET http://localhost:5199
6 - criar um pasta models 
7 - criar a classe Pokemon dentro da pasta models (class)

conexão da aplicação com banco de dados
obs: tem que baixar dentro da pasta do projeto
8 - dotnet add package Microsoft.EntityFrameworkCore.Sqlite
9 - dotnet add package Microsoft.EntityFrameworkCore.Design

10 - criar a classe AppDataContext (class)

rodar os comandos da migração para criar o banco de dados
11 - dotnet tool install --global dotnet-ef
12 - dotnet ef migrations add InitialCreate
13 - dotnet ef database update (comando que cria o banco de dados)

obs: lembrar de dar um espaço depois de Content-Type: application/json

PASSOS PARA DAR COMMIT NO GITHUB
criar uma pasta com o nome projeto 
shift + botao direito nessa pasta criada para entrar no powershell 
git clone link do repositorio
vai criar uma pasta do repositorio dentro do projeto ai você arrasta a api dentro dessa pasta
shift + botao direito na pasta clonada
git status
git add .
git status
git commit -m "mensagem commit"
git push

PASSOS PARA CRIAR UM PROJETO COM REACT
1- npx create-react-app nomeProjeto(front) --template typescript
2- npm install -g npm (caso haja problema com npm)
3- npm i (instalar dependências)
4- npm start (rodar)
5- apagar arquivos desnecessários em src (ver notion) e deixar só o index.html em public
6- criar componentes com final .tsx e começa sempre com letra maiúscula (LivroListar.tsx)
7- rodar API junto

API

Para rodar: dotnet run

React

Abra o terminal na pasta do projeto react (my-app) e digite os seguintes comando:

1. npm install react-router-dom
2. npm install --save-dev @types/react-router-dom
3. npm install axios @types/axios

Para rodar:

Garanta que o servidor backend está ativo (api com c#)
No terminal, execute: npm start